- [[:getgeoloc,"location"], [:getdncity,"city"], |
  [:getcardata,"cars"]].each do |id, txt|
  %div{ :id => id, :style => 'display: none;' }
    = "Obtaining your #{txt} ...."
    %img{ :src => '/images/spinner.gif' }

#map

:javascript
  var map, infowin, youmarker, ym_base_content, csc,
               carmarkers = [], fsmarkers = [], directionsDisplay;

  ym_base_content = #{@ym_base_content};
  csc = "#{params[:csc]}";

  function initMap() {
     map = new google.maps.Map(document.getElementById('map'), {
       zoom: 14,
       gestureHandling: 'greedy',
       mapTypeControl: false,
       streetViewControl: false,
       zoomControl: true,
       zoomControlOptions: {
         position: google.maps.ControlPosition.TOP_LEFT
       }
     });

     $('#getgeoloc').show();
     if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(setUpMap);
     } else {
        $('#map').html("Geolocation is not supported by this browser.");
        $('#getgeoloc').hide();
     }
  }

  function setUpMap(position) {
     var lat = position.coords.latitude,
         lng = position.coords.longitude;

     var origin = new google.maps.LatLng(lat,lng);
     map.setCenter(origin);

     $('#getgeoloc').hide();
     $('#getdncity').show();

     $.ajax({
       url: "/city?lat=" + lat + "&lng=" + lng + "&csc=" + csc,
       method: 'get',
       dataType: 'json'
     }).done(function(data){
       setUpMarkers(origin, data);
     });
   }

   function setUpMarkers(origin, city) {
     infowin = new google.maps.InfoWindow({content: ""});

     youmarker = new google.maps.Marker({
       position: origin,
       map: map,
       title: "You",
       icon: '/images/marker_icon_me.png',
       zIndex: google.maps.Marker.MAX_ZINDEX - 1
     });

     youmarker._details = "Current Location:<br>" + city.name + "<p>" +
                          ym_base_content;
     youmarker.addListener('click', function() {
       infowin.setContent(youmarker._details);
       infowin.open(map, youmarker);
     });

     directionsDisplay = new google.maps.DirectionsRenderer({
       suppressInfoWindows: true,
       suppressMarkers: true,
       preserveViewport: true,
       routeIndex: 0,
       map: map
     });
     var directionsService = new google.maps.DirectionsService();

     $('#getdncity').hide();
     $('#getcardata').show();

     $.ajax({
       url:  "/nearest?lat=" + origin.lat() + "&lng=" + origin.lng() +
              "&cid=" + city.cityid + "&csc=" + csc,
       method: 'get',
       dataType: 'json'
     }).done(function(data){
       $.each(data.fs, function(idx, fs) {
         fsmarkers[idx] = new google.maps.Marker({
           position: fs.json_location,
           map: map,
           icon: fs.marker_icon,
           title: fs.name
         });

         fsmarkers[idx]._details = fs.details;
         fsmarkers[idx].addListener("click", function(){
           infowin.setContent(fsmarkers[idx]._details);
           infowin.open(map, fsmarkers[idx]);
         });
       });

       $.each(data.cars, function(idx, car) {
         carmarkers[idx] = new google.maps.Marker({
           position: car.json_location,
           map: map,
           title: car.name,
           icon: car.marker_icon,
           zIndex: google.maps.Marker.MAX_ZINDEX
         });

         carmarkers[idx]._details = car.details;

         carmarkers[idx].addListener('click', function(){
           infowin.setContent(carmarkers[idx]._details +
                              "<br>Walking time: <span style='font-weight: "+
                              "bold;' id='wktime'>...</span> mins");
           infowin.open(map, carmarkers[idx]);

           var request = {
             origin: youmarker.getPosition(),
             destination: carmarkers[idx].getPosition(),
             travelMode: 'WALKING'
           };

           directionsService.route(request, function(result, status) {
             if (status == 'OK') {
               var rt = result.routes[directionsDisplay.getRouteIndex()];
               directionsDisplay.setDirections(result);

               var totaltime = 0;
               $.each(rt.legs, function(idx, leg){
                 totaltime += leg.duration.value;
               });
               $('#wktime').html(Math.ceil(totaltime/60));
             }
           });
         });
       })
       $('#getcardata').hide();
     });
  }

  function updateLocation() {
    $('#spinner').show();
    if (navigator.geolocation) {
       navigator.geolocation.getCurrentPosition(updateMarkers);
    } else {
       $('#map').html("Geolocation is not supported by this browser.");
    }
  }

  function updateMarkers(position) {
    directionsDisplay.setDirections({routes: []});

    var lat = position.coords.latitude,
        lng = position.coords.longitude;

    var origin = new google.maps.LatLng(lat,lng);
    youmarker.setPosition(origin);
    $('#spinner').hide();
    $('#cityloader').show();

    $.ajax({
      url: "/city?lat=" + lat + "&lng=" + lng + "&csc=" + csc,
      method: 'get',
      dataType: 'json'
    }).done(function(city){
      youmarker._details = "Current Location:<br>" + city.name + "<p>" +
                            ym_base_content;
      $('#cityloader').hide();
      $('#carloader').show();

      $.ajax({
        url: "/nearest?lat=" + lat + "&lng=" + lng +
                 "&cid=" + city.cityid + "&csc=" + csc,
        method: 'get',
        dataType: 'json'
      }).done(function(data){
         $.each(data.fs, function(idx, fs) {
           fsmarkers[idx].setPosition(fs.json_location);
           fsmarkers[idx].setIcon(fs.marker_icon);
           fsmarkers[idx].setTitle(fs.name);
           fsmarkers[idx]._details = fs.details;
         });
         $.each(data.cars, function(idx, car) {
           carmarkers[idx].setPosition(car.json_location);
           carmarkers[idx].setIcon(car.marker_icon);
           carmarkers[idx].setTitle(car.name);
           carmarkers[idx]._details = car.details;
         });

         $('#carloader').hide();
         infowin.close();
       });
    });
  }

%script{:async => "", :defer => "defer", :src => "/google.js"}
